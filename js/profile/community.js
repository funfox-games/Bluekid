import{onAuthStateChanged,auth,db,doc,getDoc,signOut,query,where,getDocs,limit,collection,FirebaseHelper,ONLINE_TEXT,updateDoc,OFFLINE_TEXT,hasBluekidPlus}from"../util/firebase.js";import{isUserVaild,UserReasons}from"../util/auth_helper.js";async function checkVaild(i,a){return new Promise(async(e,t)=>{var n=isUserVaild(i,a);if(n.reason==UserReasons.OVERDUE)location.href="../auth/overdue.html";else if(n.reason==UserReasons.BANNED)(d=document.createElement("dialog")).innerHTML=`
            <h1>You're banned.</h1>
            <p>Reason: ${n.banReason}</p>
            <br>
            <b>You can resolve this by contacting the developer.</b>
            <button class="puffy_button danger" id="logout__ban">Logout</button>
        `,document.body.append(d),d.showModal(),document.getElementById("logout__ban").addEventListener("click",async()=>{await signOut(auth),location.href="../index.html"});else if(n.reason==UserReasons.TEMPBANNED){var d=document.createElement("dialog"),s=1e3*n.endsOn.seconds,s=new Date(s).getTime();let e=Math.floor((s-Date.now())/864e5),t="days";console.log(e),0==e&&(e=Math.floor((s-Date.now())/36e5),t="hours",0==e)&&(e=Math.floor((s-Date.now())/6e4),t="minutes"),d.innerHTML=`
            <h1>You're banned.</h1>
            <p>Reason: ${n.banReason}</p>
            <p>Ends in ${e} ${t}.</p>
            <br>
            <b>You can resolve this sooner by contacting the developer.</b>
            <button class="puffy_button danger" id="logout__ban">Logout</button>
        `,document.body.append(d),d.showModal(),void document.getElementById("logout__ban").addEventListener("click",async()=>{await signOut(auth),location.href="../index.html"})}else n.reason==UserReasons.OTHER&&showNotification(3,"Something went wrong checking user info. Continuing as normal."),e()})}function updateFriends(a,r){return new Promise(async(e,t)=>{var n=await getDoc(doc(db,"users",a)).then(e=>e.data());let d=[],s=[];null!=n.friends&&(d=n.friends),null!=n.requests&&(s=n.requests),d.push(r),s.splice(s.indexOf(r),1);n=await getDoc(doc(db,"users",r)).then(e=>e.data());let i=[];(i=null!=n.friends?n.friends:i).push(a);n=n.sentRequests;n.splice(n.indexOf(a),1),await updateDoc(doc(db,"users",a),{friends:d,requests:s}),await updateDoc(doc(db,"users",r),{friends:i,sentRequests:n}),e()})}async function loadFriendRequests(e){var n=e.requests;if(null!=n)for(let e=0;e<n.length;e++){null!=document.getElementById("norequests")&&document.getElementById("norequests").remove();let t=n[e];var d=await getDoc(doc(db,"users",t)).then(e=>e),s=d.data();if(0!=d.exists()){let e=document.getElementById("requestex").cloneNode(!0);e.id="",e.children[0].children[0].innerText=s.username,e.children[0].children[1].innerText="UID: "+t,e.children[1].children[0].addEventListener("click",async()=>{e.children[1].children[0].innerHTML="Working...",e.children[1].children[0].setAttribute("disabled","true"),await CommunityUtilites.acceptFriendReq(auth.currentUser,t),e.remove(),location.reload()}),e.children[1].children[1].addEventListener("click",async()=>{e.children[1].children[1].innerHTML="Working...",e.children[1].children[1].setAttribute("disabled","true"),await CommunityUtilites.ignoreFriendReq(auth.currentUser,t),showNotification(4,"Success! Some factors may not be updated so please refresh."),e.remove()}),e.children[1].children[2].addEventListener("click",async()=>{showNotification(3,"no. not yet")}),document.getElementById("allRequests").append(e)}}document.getElementById("requestsloading").remove()}async function loadSentRequests(e){var t=e.sentRequests;if(null==t)document.getElementById("allSentRequests").append(clone);else{for(let e=0;e<t.length;e++){null!=document.getElementById("nosentrequests")&&document.getElementById("nosentrequests").remove();let d=t[e];var n=await getDoc(doc(db,"users",d)).then(e=>e),s=n.data();if(0!=n.exists()){let n=document.getElementById("sentrequestex").cloneNode(!0);n.id="",n.children[0].children[0].innerText=s.username,n.children[0].children[1].innerText="UID: "+d,n.children[1].children[0].addEventListener("click",async()=>{n.children[1].children[0].innerHTML="Working...",n.children[1].children[0].setAttribute("disabled","true");var e=auth.currentUser.uid,e=doc(db,"users",e),t=[],e=((t=(await getDoc(e).then(e=>e.data())).sentRequests).splice(t.indexOf(d),1),await updateDoc(e,{sentRequests:t}),doc(db,"users",d)),t=[];(t=(await getDoc(e).then(e=>e.data())).requests).splice(t.indexOf(d),1),await updateDoc(e,{requests:t}),showNotification(4,"Success! Some factors may not be updated so please refresh."),n.remove()}),document.getElementById("allSentRequests").append(n)}}document.getElementById("sentrequestsloading").remove()}}let limitReached=async e=>{var t=await hasBluekidPlus();return 50<=e&&!t},friendlgtnh=0;async function loadFriends(){document.getElementById("friendLoadingStatus").innerHTML="Fetching friends...";var t,n=await(await fetch("https://bluekidapi.netlify.app/.netlify/functions/api/social",{headers:{user:auth.currentUser.uid,"Content-Type":"application/json"}})).json();console.log(n),await limitReached(n.length)&&(document.getElementById("limitReached").setAttribute("show",""),document.getElementById("addfriend").setAttribute("disabled","")),friendlgtnh=n.length;for(let e=0;e<n.length;e++){null!=document.getElementById("nofriends")&&document.getElementById("nofriends").remove();let a=n[e],r=document.getElementById("friendex").cloneNode(!0);r.children[1].href="./user/index.html?id="+a.uid,1!=a.deleted&&(r.children[1].children[0].innerText=a.data.username,r.id=a.data.username,t=async()=>{var e,t,n,d,s,i=await FirebaseHelper.getUserStatus(a.uid);i.status==ONLINE_TEXT&&(r.children[1].children[1].innerHTML=ONLINE_TEXT,r.children[1].children[1].style.color="lime",a.data.communitySettings)&&"none"==a.data.communitySettings.privacy.showStatus&&(r.children[1].children[1].innerHTML=""),i.status==OFFLINE_TEXT&&(i=-(Date.parse(i.lastOnline)-new Date),e=Math.floor(i/1e3),t=Math.floor(i/6e4),n=Math.floor(i/864e5),d=Math.floor(i/36e5),s=Math.floor(i/6048e5),0<(i=Math.floor(i/2628e6))?r.children[1].children[1].innerHTML=`Last online ${i} month${1==i?"":"s"} ago.`:0<s?r.children[1].children[1].innerHTML=`Last online ${s} week${1==s?"":"s"} ago.`:0<n?r.children[1].children[1].innerHTML=`Last online ${n} day${1==n?"":"s"} ago.`:0<d?r.children[1].children[1].innerHTML=`Last online ${d} hour${1==d?"":"s"} ago.`:0<t?r.children[1].children[1].innerHTML=`Last online ${t} minute${1==t?"":"s"} ago.`:0<e&&(r.children[1].children[1].innerHTML=`Last online ${e} second${1==e?"":"s"} ago.`),r.children[1].children[1].style.color="rgb(200,200,200)",a.data.communitySettings&&"none"==a.data.communitySettings.privacy.showStatus&&(r.children[1].children[1].innerHTML=""),a.data.communitySettings)&&"none"==a.data.communitySettings.privacy.showLastOnline&&(r.children[1].children[1].innerHTML=OFFLINE_TEXT)},setInterval(t,5e3),t(),document.getElementById("allFriends").append(r))}document.getElementById("friendsloading").remove()}async function searchUsers(s){return new Promise(async(e,t)=>{var n=collection(db,"users"),n=query(n,where("username","in",[s,s.toLowerCase(),s.toUpperCase()]),limit(10)),n=await getDocs(n);let d=[];n.forEach(e=>{d.push(e)}),console.log(d),e(d)})}async function sendRequest(i){return new Promise(async(e,t)=>{var n=doc(db,"users",auth.currentUser.uid),d=await getDoc(n).then(e=>e.data().sentRequests);null==d||d==[]?await updateDoc(n,{sentRequests:[i]}):(d.push(i),await updateDoc(n,{sentRequests:d}));let s=await getDoc(doc(db,"users",i)).then(e=>e.data().requests);n=s=null==s?[]:s;n.push(auth.currentUser.uid),await updateDoc(doc(db,"users",i),{requests:n}),e()})}onAuthStateChanged(auth,async s=>{if(null!=document.getElementById("COMMUNITY_PAGE"))if(s){var t=s.uid,t=doc(db,"users",t),n=await getDoc(t).then(e=>e.exists()?e.data():"UNKNOWN");await checkVaild(s,n);let d="",e=(loadFriendRequests(n),loadSentRequests(n),loadFriends(),new URLSearchParams(document.location.search));(async()=>{null!=e.get("friend")&&(null!=n.friends&&n.friends.includes(e.get("friend"))?document.getElementById("friendresult").innerHTML=`
                <h1><i class="fa-solid fa-check fa-lg"></i> Already friends!</h1>
                <form method="dialog">
                    <button class="puffy_button primary">Ok</button>
                </form>
            `:null!=n.friends&&n.sentRequests.includes(e.get("friend"))?document.getElementById("friendresult").innerHTML=`
                <h1><i class="fa-solid fa-check fa-lg"></i> Already sent a request!</h1>
                <form method="dialog">
                    <button class="puffy_button primary">Ok</button>
                </form>
            `:(document.getElementById("friendprocessing").showModal(),await sendRequest(e.get("friend")),document.getElementById("friendprocessing").close()),document.getElementById("friendresult").showModal())})(),null!=e.get("friend")&&(console.log("rwarawr"),window.history.pushState({page:location.pathname},document.title,window.location.pathname)),document.getElementById("friendSearch").addEventListener("change",()=>{var t=document.getElementById("allFriends").children;for(let e=0;e<t.length;e++)t[e].style.display="none";for(let e=0;e<t.length;e++)t[e].id.includes(document.getElementById("friendSearch").value)&&(t[e].style.display="flex")}),0==await limitReached(friendlgtnh)&&(document.getElementById("addfriend").addEventListener("click",async()=>{document.getElementById("addfriend").innerHTML="Working...",document.getElementById("addfriend").setAttribute("disabled","true");var e,t,n=document.getElementById("friendid").value;n==s.uid?showNotification(3,"You're not that lonely... aren't you?"):""!=n&&(e=doc(db,"users",n),0!=(e=await getDoc(e).then(e=>e)).exists())&&(null!=e.data().communitySettings&&0==e.data().communitySettings.allowFriendRequests?showNotification(3,"This person isn't accepting friend requests right now."):(d=n,e=(n=e.data()).username,t=n.requests,null!=(n=n.friends)&&n.includes(s.uid)?showNotification(3,`You are already friends with ${e}.`):null!=t&&t.includes(s.uid)?showNotification(3,`You have already sent a request to ${e}.`):(document.getElementById("friendingperson").innerText=e,document.getElementById("confirm").showModal()))),document.getElementById("addfriend").innerHTML='<i class="fa-solid fa-user-group"></i> Add friend',document.getElementById("addfriend").removeAttribute("disabled")}),document.getElementById("sendrequest").addEventListener("click",async()=>{document.getElementById("sendrequest").innerHTML="Working...",document.getElementById("sendrequest").setAttribute("disabled",""),await sendRequest(d),location.reload()})),document.getElementById("searchFriends").addEventListener("click",()=>{document.getElementById("searchuser").showModal()}),document.getElementById("searchusers").addEventListener("click",async()=>{console.log(document.getElementById("allowFriends").checked);var n=await searchUsers(document.getElementById("username_seaching").value);document.getElementById("allsearched").innerHTML="";for(let t=0;t<n.length;t++){var d=n[t].data();let e=n[t].id;if(console.log(d),document.getElementById("allowFriends").checked||null==d.friends||!d.friends.includes(auth.currentUser.uid)){var s=document.getElementById("queryedex").cloneNode(!0),i=(s.id="",s.children[0]),a=i.children[0],r=(a.children[0].innerText=d.username,null==d.friends?i.children[1].innerHTML="Friends: 0":i.children[1].innerHTML="Friends: "+d.friends.length||0,await FirebaseHelper.getBadges(e));console.log(r);for(let e=0;e<r.length;e++){var o=r[e],l=document.createElement("img");l.src="../asset/badges/"+o.replace(" ","")+".png",l.width="24",l.alt=o,"Bluekid Plus"==(l.title=o)&&l.classList.add("badge--bkp"),a.children[1].append(l)}s.children[1].children[0].addEventListener("click",()=>{document.getElementById("friendid").value=e,document.getElementById("searchuser").close()}),document.getElementById("allsearched").append(s)}}})}else location.href="../auth/login.html"});class CommunityUtilites{static async acceptFriendReq(n,d){return new Promise(async(e,t)=>{await updateFriends(n.uid,d),e()})}static async ignoreFriendReq(e,t){return new Promise(async(e,t)=>{var n=doc(db,"users",request),d=[],n=((d=(await getDoc(n).then(e=>e.data())).sentRequests).splice(d.indexOf(request),1),await updateDoc(n,{sentRequests:d}),doc(db,"users",auth.currentUser.uid)),d=[];(d=(await getDoc(n).then(e=>e.data())).requests).splice(d.indexOf(request),1),await updateDoc(n,{requests:d}),e()})}static async getAllRequests(n){return new Promise(async(e,t)=>{e((await getDoc(doc(db,"users",n.uid))).data().requests)})}}export{CommunityUtilites};