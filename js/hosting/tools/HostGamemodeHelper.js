import{db,doc,functions,getDoc,httpsCallable,realtime,realtimeGet,ref}from"./../../util/firebase.js";let gameId=null;function convertDictToArray(e){var a,t=[];for(a in e)e.hasOwnProperty(a)&&t.push([a,e[a]]);return t}async function getGameData(){return new Promise(async(e,a)=>{null==gameId&&a("Game ID not vaild."),e(await httpsCallable(functions,"hosting-viewHostData")(gameId))})}async function setActiveGame(e){null!=gameId&&console.warn("GameID is already set! Proceeding with action..."),gameId=e}async function updateData(n){return new Promise(async(e,a)=>{var t=await httpsCallable(functions,"hosting-updateGameData")({gameId:gameId,toUpdate:n});0==t.success&&"permission/not_allowed"==t.error&&(console.warn('Insufficent permissions to update prop "'+t.failedProp+'"'),a(t.failedProp)),e()})}async function getKit(){return new Promise(async(e,a)=>{e((await realtimeGet(ref(realtime,"games/"+gameId))).val().kitData)})}async function wait(t){return new Promise(async(e,a)=>{setTimeout(()=>e(),1e3*t)})}async function addTo(t,n){return new Promise(async e=>{var a=await httpsCallable(functions,"hosting-addTo")({gameId:gameId,field:t,toAdd:n});0==a.success&&"permission/not_allowed"==a.error&&(console.warn('Insufficent permissions to update prop "'+a.failedProp+'"'),rej(a.failedProp)),0==a.success&&(console.warn("Success false.",a),rej(null)),e()})}function getRanks(e){return convertDictToArray(e).slice().sort(function(e,a){return a[1]-e[1]})}function calculateNewScore(e,a,t,n,r){return n?e+1/(a/t)*100*r:e-1/(t/a)*100*2}class CountdownManager{static doCountdown(n,r,o=null,s=null,i=null){return new Promise(async e=>{let a=n,t=(await updateData({timer:a}),r&&r(),s&&s(),setInterval(async()=>{--a,null!=o&&(o.innerHTML=a),await updateData({timer:a}),0==a&&(e(),clearInterval(t))},1e3));i&&i.addEventListener("abort",()=>{e(),clearInterval(t)})})}}export{getGameData,setActiveGame,updateData,getKit,wait,addTo,getRanks,calculateNewScore,CountdownManager};